name: Build Windows EXE

on:
  push:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: simple_live_app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22'
          channel: 'stable'
          cache: true

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install NSIS
        run: |
          choco install nsis -y
          echo "NSIS_PATH=C:\Program Files (x86)\NSIS" >> $env:GITHUB_ENV

      - name: Get dependencies
        run: |
          flutter pub get

      - name: Build Windows
        run: |
          flutter build windows --release

      - name: Create NSIS Installer Script
        run: |
          # Copy pre-created NSIS script
          Copy-Item "installer.nsi" -Destination "build/windows/x64/runner/Release/installer.nsi"

      - name: Compile NSIS Installer
        run: |
          cd build/windows/x64/runner/Release
          & "$env:NSIS_PATH\makensis.exe" installer.nsi

      - name: Upload Windows Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: simple-live-app-windows-installer
          path: simple_live_app/build/windows/x64/runner/Release/simple_live_installer.exe
          retention-days: 30

      - name: Create Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          files: build/windows/x64/runner/Release/simple_live_installer.exe
          tag_name: windows-${{ github.run_number }}
          name: Windows Release ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}