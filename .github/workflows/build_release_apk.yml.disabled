name: Build Release APK

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: false
        default: 'v1.0.0'

jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    
    steps:
      # 签出代码
      - name: Checkout code
        uses: actions/checkout@v4
      
      # 设置Java环境
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      
      # 设置Flutter环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true
      
      # 生成签名文件
      - name: Generate release keystore
        run: |
          mkdir -p ~/.android
          keytool -genkey -v \
            -keystore ~/.android/release.jks \
            -storepass release123 \
            -alias release \
            -keypass release123 \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=SimpleLive, OU=Development, O=SimpleLive, L=City, ST=State, C=CN" \
            -noprompt
      
      # 创建key.properties文件
      - name: Create key.properties
        run: |
          echo "storeFile=/home/runner/.android/release.jks" > simple_live_app/android/key.properties
          echo "storePassword=release123" >> simple_live_app/android/key.properties
          echo "keyPassword=release123" >> simple_live_app/android/key.properties
          echo "keyAlias=release" >> simple_live_app/android/key.properties
      
      # 更新Flutter packages
      - name: Install dependencies
        run: |
          cd simple_live_app
          flutter pub get
      
      # 构建发布版APK
      - name: Build Release APK
        run: |
          cd simple_live_app
          flutter build apk --release --split-per-abi
      
      # 获取版本信息
      - name: Get version info
        id: version
        run: |
          # 尝试从输入获取版本，否则使用提交哈希
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="v$(date +'%Y%m%d')-$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      # 创建Release并上传APK
      - name: Create Release and Upload APK
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            # Simple Live Release ${{ env.VERSION }}
            
            This release was automatically generated by GitHub Actions.
            
            ## Changes
            - Automated build from commit ${{ github.sha }}
            
            ## Assets
            APK files for different architectures are attached.
          files: |
            simple_live_app/build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            simple_live_app/build/app/outputs/flutter-apk/app-x86_64-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}